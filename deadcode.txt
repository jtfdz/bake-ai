    <a id="primary"  onclick="openTabTeoria(event)" class="tabteoria has-background-light has-text-black is-active"><strong>general</strong></a>


  ngOnInit(): void {
  }
  Component implements OnInit {
  import { Component, OnInit } from '@angular/core';

  	ngAfterViewInit(): void {
	}




<div class="modal is-active">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">¿estás segura de tus elecciones?</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <button class="button is-success">Save changes</button>
      <button class="button">Cancel</button>
    </section>
    <footer class="modal-card-foot">
      <button class="button is-success">Save changes</button>
      <button class="button">Cancel</button>
    </footer>
  </div>
</div>

<div class="modal"  id="myModal">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">¿estás segura de tus elecciones?</p>
      <button class="delete" aria-label="close" data-bulma-modal="close"></button>
    </header>
    <section class="modal-card-body">
      <button class="button is-success">sí, proceder</button>
      <button class="button" data-bulma-modal="close">no, volver</button>
    </section>
  </div>
</div>






inputThirdSlide(): void{
    this.showBoolean = this.checkersService.checkInput(this.nombrecito);
  }

  (ngModelChange)="inputThirdSlide()"
  [disabled]="isInputThirdSlideEnabled"











import { LunaRwComponent } from './paginas/modulos/luna-rw/luna-rw.component';
import { SolAudioComponent } from './paginas/modulos/sol-audio/sol-audio.component';

  { path: 'modulo-luna', component: LunaRwComponent, data: { animation: 'alaDerecha' } },
  { path: 'modulo-sol', component: SolAudioComponent, data: { animation: 'alaDerecha' } },



  
    path: 'origen', component: OrigenComponent,
    children: [
    { path: 'modulo-luna', component: LunaRwComponent, data: { animation: 'alaDerecha' } },
    { path: 'modulo-sol', component: SolAudioComponent, data: { animation: 'alaDerecha' } },
    ]













    <div class="hero is-fullheight is-white has-text-black">    
    <div class="hero-header">
      <div class="container has-text-centered">



        
              </div>
    

            <!--el medio-->


    </div>
    </div>
    <!-- FIN hero header -->

    <!-- hero body -->
    <div class="hero-body">

    </div>       
    <!-- FIN hero body -->

</div>



  { path: 'primer-inicio-first-slide', component: FirstSlideComponent },
  { path: 'primer-inicio-second-slide', component: SecondSlideComponent },
  { path: 'primer-inicio-third-slide', component: ThirdSlideComponent },
  { path: 'primer-inicio-forth-slide', component: ForthSlideComponent },

  import { FirstSlideComponent } from './paginas/principales/primer-inicio/first-slide/first-slide.component';
import { SecondSlideComponent } from './paginas/principales/primer-inicio/second-slide/second-slide.component';
import { ThirdSlideComponent } from './paginas/principales/primer-inicio/third-slide/third-slide.component';
import { ForthSlideComponent } from './paginas/principales/primer-inicio/forth-slide/forth-slide.component';







function openTabTeoria(evt, tabNombre) {
      const result = document.querySelectorAll('.tabteoria');

      for (i = 0; i < result.length; i++) {
          result[i].className = result[i].className.replace(" has-text-black", " has-text-"+result[i].parentElement.id);
          result[i].parentElement.parentElement.className = result[i].parentElement.parentElement.className.replace(" has-background-light", "");
      }
    
      evt.currentTarget.className = evt.currentTarget.className.replace(" has-text-"+evt.currentTarget.parentElement.id, " has-text-black");
      evt.currentTarget.parentElement.parentElement.className += " has-background-light";   
}




{
  "usuario": {
    "gusto": "animales",
    "nombre": "jongin",
    "iniciado": true
  },
  "aprender": {
    "general": {
      "historia": false,
      "kanas": false
    }
  }
}





// // interface IndexNum {
// //   [index: number]: string;
// // }


  //vocales: IndexNum[] = ['a','i','u','e','o']



  // hiragana: IndexObj[] = [
  //     k : { a: "か", i: "き", u: "く", e: "け", o: "こ"},
  //     s : { a: "さ", i: "し", u: "す", e: "せ", o: "そ"},
  //     t : { a: "た", i: "ち", u: "つ", e: "て", o: "と"},
  //     n : { a: "な", i: "に", u: "ぬ", e: "ね", o: "の"},
  //     h : { a: "は", i: "ひ", u: "ふ", e: "へ", o: "ほ"},
  //     m : { a: "ま", i: "み", u: "む", e: "め", o: "も"},
  //     y : { a: "や", i: "", u: "ゆ", e: "", o: "よ"},     
  //     r : { a: "ら", i: "り", u: "る", e: "れ", o: "ろ"},    
  //     //falta especiales
  // ];

    // for(var key in this.hiragana) {
  //     this.allHiragana[key] = this.hiragana[key];
  // }









      <!-- Main container -->
      <nav class="level">
        <!-- Left side -->
        <div class="level-left">
          <div class="level-item">
 
          </div>
        </div>



 





        <!-- Right side -->
        <div class="level-right">
 
        </div>
      </nav>

















  
  <div class="box is-light">







  <!-- Main container -->
  <nav class="level">
    <!-- Left side -->
    <div class="level-left">
      <div class="level-item">
        <p class="title is-1">
          <strong>か</strong>
        </p>
      </div>
    </div>

    <!-- Right side -->
    <div class="level-right">
      <div class="level-item">
        <p class="subtitle is-5">
          <strong>ka</strong>
        </p>
      </div>
      <div class="level-item">
        <p class="subtitle is-5">
          <strong>sonio</strong>
        </p>
      </div>
    </div>
  </nav>


  + tazso
   <button (click)="cerrarCard()" class="button">vai</button>


  </div>











